name: Broken

on:
  push:
    branches:
      - main
      - gh_action
      - added_difference
  workflow_dispatch:

jobs:
  run-docker-compose:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

      - name: Set up Docker (macOS)
        if: runner.os == 'macOS'
        run: |
          # Download Docker Desktop for Mac
          curl -o docker.dmg https://desktop.docker.com/mac/main/amd64/Docker.dmg
          sudo hdiutil attach docker.dmg
          sudo /Volumes/Docker/Docker.app/Contents/MacOS/install --accept-license
          sudo hdiutil detach /Volumes/Docker
          # Start Docker
          open -a Docker

      - name: Set up Docker (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          # Download Docker Desktop Installer
          Invoke-WebRequest -OutFile DockerDesktopInstaller.exe https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe
          # Install Docker Desktop silently
          Start-Process -Wait DockerDesktopInstaller.exe -ArgumentList "install", "--quiet"
          # Start Docker service
          Start-Service *docker*

      - name: Wait for Docker
        shell: bash
        run: |
          # Wait for Docker to be ready
          for i in {1..30}; do
            if docker info > /dev/null 2>&1; then
              echo "Docker is ready"
              break
            fi
            echo "Waiting for Docker to be ready..."
            sleep 10
          done

      - name: Docker Version
        run: docker --version

      - name: Docker Info
        run: docker info

      - name: OS Info
        shell: bash
        run: |
          echo "Operating System Details:"
          uname -a || ver

      - name: Run Docker Compose
        run: docker compose -f docker-compose.broken.yml up
